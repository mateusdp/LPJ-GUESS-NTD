///////////////////////////////////////////////////////////////////////////////////////
/// \file getcliminput.h
/// \brief Input module for driver file generated by GetClim tool
///
/// \author Ben Smith
/// $Date: 2016-07-26 16:25:45 +0100 (Tue, 26 Jul 2016) $
///
///////////////////////////////////////////////////////////////////////////////////////

#ifndef LPJ_GUESS_GETCLIMINPUT_H
#define LPJ_GUESS_GETCLIMINPUT_H

#include "guess.h"
#include "inputmodule.h"
#include "soilinput.h"
#include <vector>
#include "gutil.h"
#include "externalinput.h"

/// An input module for a single-grid cell driver file generated by GetClim tool
/** Optional input module intended for use with LPJ-GUESS Windows Shell.
 *  Forces model with time-series data for a single grid cell
 *  generated by the GetClim tool which accompanies the Windows Shell
 *  and LPJ-GUESS Education
 *
 *  \see InputModule for more documentation about writing input modules.
 */
class GetclimInput : public InputModule {
public:

	/// Constructor
	/** Declares the instruction file parameters used by the input module.
	 */
	GetclimInput();

	/// Destructor, cleans up used resources
	~GetclimInput();

	/// Reads in gridlist and initialises the input module
	/** Gets called after the instruction file has been read */
	void init();

	/// See base class for documentation about this function's responsibilities
	bool getgridcell(Gridcell& gridcell);

	/// See base class for documentation about this function's responsibilities
	bool getclimate(Gridcell& gridcell);

	/// See base class for documentation about this function's responsibilities
	void getlandcover(Gridcell& gridcell);

	/// Obtains land management data for one day
	void getmanagement(Gridcell& gridcell) {management_input.getmanagement(gridcell);}

private:

	/// Longitude of grid cell to simulate
	double lon;

	/// Latitude of grid cell to simulate
	double lat;

	/// atmospheric CO2 concentration (ppmv) (read from ins file)
	double co2;

	/// atmospheric nitrogen deposition (kgN/yr/ha) (read from ins file)
	double ndep;

	/// LPJ soil code
	int soilcode;

	/// Spinup and scenario simulation years
	int nyear_spinup, nyear_scenario;
	
	/// Handle to GetClim driver file
	FILE* in_clim;

	/// Grid cell counter (only one grid cell per simulation in this input module)
	int grid_count;

	/// Land cover input module
	LandcoverInput landcover_input;

	/// Management input module
	ManagementInput management_input;

	/// Reads header of GetClim driver file
	void init_climate(double& dlon,double& dlat);

	/// Timers for keeping track of progress through the simulation
	Timer tprogress,tmute;
	static const int MUTESEC=20; // minimum number of sec to wait between progress messages

	/// Daily temperature, precipitation and sunshine for one year
	double dtemp[Date::MAX_YEAR_LENGTH];
	double dprec[Date::MAX_YEAR_LENGTH];
	double dsun[Date::MAX_YEAR_LENGTH];

	/// Daily diurnal temperature range for one year
	double ddtr[Date::MAX_YEAR_LENGTH];
};

#endif // LPJ_GUESS_GETCLIMINPUT_H
